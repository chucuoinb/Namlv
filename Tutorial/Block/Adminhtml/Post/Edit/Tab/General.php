<?php
/**
 * Created by PhpStorm.
 * User: root
 * Date: 12/07/2017
 * Time: 16:33
 */

namespace Namlv\Tutorial\Block\Adminhtml\Post\Edit\Tab;


use Magento\Backend\Block\Widget\Form\Generic;
use Magento\Backend\Block\Widget\Tab\TabInterface;

class General extends Generic implements TabInterface
{

    /**
     * Enable or Disable
     * @var \Namlv\Tutorial\Model\Config\Source\IsEnable
     */
    protected $_status;
    /**
     * yes or no
     * @var \Namlv\Tutorial\Model\Config\Source\Option
     */
    protected $_option;
    /**
     * Core registry
     *
     * @var \Magento\Framework\Registry
     */
    protected $_coreRegistry;
    protected $_wysiwygConfig;
    public function __construct(
        \Magento\Cms\Model\Wysiwyg\Config $wysiwygConfig,
        \Namlv\Tutorial\Model\Config\Source\Option $option,
        \Namlv\Tutorial\Model\Config\Source\IsEnable $status,
        \Magento\Backend\Block\Template\Context $context,
        \Magento\Framework\Registry $registry,
        \Magento\Framework\Data\FormFactory $formFactory,
        array $data = []
    )
    {
        $this->_wysiwygConfig = $wysiwygConfig;
        $this->_option = $option;
        $this->_status = $status;
        parent::__construct($context, $registry, $formFactory, $data);
    }

    protected function _construct()
    {
        parent::_construct();
        $this->setActive(true);
    }

    protected function _prepareForm()
    {
        $form = $this->_formFactory->create();
        $fieldSet = $form->addFieldset(
            'base_fieldSet',null);
        $this->_addElementTypes($fieldSet);
        $fieldSet->addField(
            'title',
            'text',
            [
                'name' => 'title',
                'label' => __('Title'),
                'title' => __('Title'),
                'required' => true
            ]
        );
        $fieldSet->addField(
            'description',
            'editor',
            [
                'name' => 'description',
                'label' => __('Description'),
                'title' => __('Description'),
                'required' =>true,
                'config' => $this->_wysiwygConfig->getConfig()
            ]
        );
        $fieldSet->addField(
            'image',
            'image',
            [
                'name' => 'image',
                'label' => __('Image'),
                'title' => __('Image'),
                'required' => true,
                'note' => __('Extension of file as: jpg, jpeg, png')
            ]
        );
        $fieldSet->addField(
            'status',
            'select',
            [
                'name' => 'status',
                'label' => __('Status'),
                'title' => __('Status'),
                'required' => true,
                'values' => $this->_status->getStatusOptions()
            ]
        );
        $formData = $this->_coreRegistry->registry('namlv_tutorial_edit');
        if ($formData){
            if ($formData->getData('id')) {
                $fieldSet->addField(
                    'id',
                    'hidden',
                    ['name' => 'id']
                );
            }
            $form->setValues($formData->getData());

        }
        $this->setForm($form);
        return parent::_prepareForm(); // TODO: Change the autogenerated stub
    }

    /**
     * Return Tab label
     *
     * @return string
     * @api
     */
    public function getTabLabel()
    {
        return __('General');
        // TODO: Implement getTabLabel() method.
    }

    /**
     * Return Tab title
     *
     * @return string
     * @api
     */
    public function getTabTitle()
    {
        return $this->getTabLabel();

        // TODO: Implement getTabTitle() method.
    }

    /**
     * Can show tab in tabs
     *
     * @return boolean
     * @api
     */
    public function canShowTab()
    {
        return true;
        // TODO: Implement canShowTab() method.
    }

    /**
     * Tab is hidden
     *
     * @return boolean
     * @api
     */
    public function isHidden()
    {
        return false;
        // TODO: Implement isHidden() method.
    }
}